plugins {
    id "com.android.library"
    id "kotlin-android"
    id "com.kezong.fat-aar"
    id "org.jlleitschuh.gradle.ktlint"
    id "com.vanniktech.android.junit.jacoco"
    id "maven-publish"
}
group = group_name

android {
    compileSdkVersion 30

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 30
        versionCode 1
        versionName cur_version

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        debug {
            testCoverageEnabled true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

ktlint {
    disabledRules = ["no-wildcard-imports"]
}

// https://github.com/vanniktech/gradle-android-junit-jacoco-plugin
junitJacoco {
    jacocoVersion = "0.8.6"
    ignoreProjects = []
    includeNoLocationClasses = false
    includeInstrumentationCoverageInMergedReport = false
}

dependencies {
    // main sdk
//    api "com.williamfzc:randunit:$cur_version"
    api project(":randunit")
    api "org.robolectric:robolectric:$robolectric_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "androidx.core:core-ktx:$core_ktx_version"

    // for generating junit format cases
    implementation "junit:junit:$junit4_version"
    implementation "org.junit.jupiter:junit-jupiter-api:$junit5_version"
    implementation "org.junit.jupiter:junit-jupiter-engine:$junit5_version"

    // for testing itself
    testImplementation project(":randunit")
    testImplementation "junit:junit:$junit4_version"
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junit5_version"
    testImplementation "org.junit.jupiter:junit-jupiter-engine:$junit5_version"
}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.release

                groupId = group_name
                artifactId = android_product_name
                version = cur_version
            }
            // Creates a Maven publication called “debug”.
            debug(MavenPublication) {
                from components.debug

                groupId = group_name
                artifactId = android_product_name + "-debug"
                version = cur_version
            }
        }
    }
}
